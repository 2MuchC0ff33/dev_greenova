---
exclude: '^$'
fail_fast: false # Add this line to continue running hooks even when some fail
repos:
  # 1. File integrity, merge, and security checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: check-yaml
      - id: check-json
      - id: check-toml
      - id: end-of-file-fixer
      - id: trailing-whitespace
        exclude: '.*\.(html|djhtml|jinja)$'
        args: ['--markdown-linebreak-ext=md']
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: requirements-txt-fixer
      - id: debug-statements
        exclude: '^greenova/chatbot/proto/.*_pb2\.py$'

  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.26.0
    hooks:
      - id: gitleaks

  # 2. Code cleanup
  - repo: https://github.com/pycqa/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        args:
          [
            '--in-place',
            '--remove-all-unused-imports',
            '--remove-unused-variables',
          ]
        exclude: 'greenova/.*templatetags/.*\.py$'

  # Customized dead code detection using script
  - repo: local
    hooks:
      - id: find-real-dead-code
        name: find real dead code
        entry: python scripts/find_real_dead_code.py --staged-only
        language: system
        pass_filenames: false

  # 3. Import sorting (isort, or use Ruff's import sorting if preferred)
  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort
        args: ['--profile', 'black']

  # 4. Python formatting and linting (Ruff as primary)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.10
    hooks:
      - id: ruff
        types_or: [python, pyi]
        args: ['--unsafe-fixes', '--fix']

  - repo: https://github.com/hhatto/autopep8
    rev: v2.1.0
    hooks:
      - id: autopep8
        args: [--max-line-length=88]

  # 5. Additional Python linting
  - repo: https://github.com/pycqa/pylint
    rev: v3.3.7
    hooks:
      - id: pylint
        name: pylint (python)
        entry: pylint
        types: [python]
        exclude: 'migrations|_pb2.py|\.venv|tests/|test_|__init__\.py'
        additional_dependencies:
          - pylint_django
          - pylint_pytest
          - pylint_plugin_utils
          - pylint_pydantic
          - pylint_protobuf
          - pylint_flask
          - pylint_celery
          - pylint_quotes

  # 6. Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.15.0
    hooks:
      - id: mypy
        name: mypy
        args: ['--config-file=mypy.ini', '--namespace-packages']
        exclude: 'migrations|venv|\.venv|tests/|test_|__init__\.py|.*_pb2\.py$'
        additional_dependencies:
          - 'django-stubs'
          - 'django-stubs-ext'
          - 'types-requests'
          - 'types-Pillow'
          - 'types-PyYAML'
          - 'django-types-extra'
          - 'types-python-dateutil'
          - 'types-protobuf'
          - 'matplotlib-stubs'
          - 'pandas-stubs'
          - 'types-pytz'
          - 'pytest-stub'
          - 'types-jinja2'
          - 'types-setuptools'
          - 'types-cryptography'
          - 'types-flake8'
          - 'plotly-stubs'
          - 'types-pytest-lazy-fixture'
          - 'types-protobuf'
          - 'types-sqlalchemy'
          - 'types-toml'
          - 'types-urllib3'
          - 'types-docutils'
          - 'types-psutil'
          - 'types-redis'
          - 'types-click'
          - 'types-markdown'

  # 7. Pattern-based checks
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-no-eval
      - id: python-no-log-warn
      - id: python-use-type-annotations
      - id: rst-backticks
      - id: rst-directive-colons
      - id: rst-inline-touching-normal
      - id: text-unicode-replacement-char

  # 8. Framework-specific tools
  - repo: https://github.com/adamchainz/django-upgrade
    rev: 1.25.0
    hooks:
      - id: django-upgrade
        args: ['--target-version', '5.2']

  # 9. Documentation and text tools
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        exclude: 'requirements/.*\.txt|requirements/.*\.in|notebooks/pie_chart_gallery\.ipynb'
  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.18.1
    hooks:
      - id: markdownlint-cli2
        args: ['--config', '.markdownlint-cli2.jsonc', '--fix']

  # 10. Frontend formatting and linting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [javascript, css, markdown, yaml, json]

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.26.0
    hooks:
      - id: eslint
        files: \.(js|ts|jsx|tsx)$
        types: [file]
        args:
          - '--fix'
          - '--max-warnings=9999'
          - '--config'
          - 'eslint.config.js'
        additional_dependencies:
          - eslint@9.26.0
          - prettier@3.2.4
          - eslint-config-prettier@10.1.3
          - eslint-plugin-prettier@5.4.0
          - eslint-config-stylelint@24.0.0
          - stylelint@16.17.0
          - stylelint-config-recommended@15.0.0
          - stylelint-config-standard@37.0.0
          - stylelint-config-tailwindcss@1.0.0
          - postcss-html@1.6.0

  # 11. Shell and other tools
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.10.0
    hooks:
      - id: shellcheck
        args: ['--severity=warning']
        entry: shellcheck
        language: system

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
      - id: pyupgrade
        args: ['--py312-plus']

  # 12. Security checks (that may take longer)
  - repo: local
    hooks:
      - id: bandit
        name: bandit
        entry: /usr/local/py-utils/bin/bandit
        language: system
        args: ['--configfile', 'pyproject.toml']
        exclude: 'tests/.*'
        types: [python]
      - id: safety-check
        name: Safety dependency checker
        entry: >
          bash -c 'pip install safety &&
          safety check --ignore 65278,66704,65212,65647,62556,62044,75180'
        language: system
        types: [python]
        pass_filenames: false

  # 13. Dependency management (should run last)
  - repo: https://github.com/pre-commit/sync-pre-commit-deps
    rev: v0.0.3
    hooks:
      - id: sync-pre-commit-deps
